/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * CustomerPaymentsPanel.java
 *
 * Created on 17/07/2010, 02:53:24 PM
 */
package gui.paymnts;

import bussiness.Customer;
import bussiness.Sale;
import common.ImpresoraTicket;
import common.InputValidator;
import common.LeerDatos;
import common.Ticket;
import common.ValidationException;
import model.PaymentsModel;
import dao.SalesInfoDAO;
import java.awt.Color;
import java.text.SimpleDateFormat;
import java.util.Calendar;


import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Luceintheskyithdiamosososogidfinb
 */
public class CustomerPaymentsPanel extends javax.swing.JPanel {

    PaymentsModel model;

    /** Creates new form CustomerPaymentsPanel */
    public CustomerPaymentsPanel() {
        initComponents();
        setsalesTable();
        this.noticeLabel.setVisible(false);
        paymentTextField.setEnabled(false);

    }

    public final void setsalesTable() {

        DefaultTableModel tableModel = new DefaultTableModel();

        tableModel.addColumn("ID Venta");
        tableModel.addColumn("Fecha");
        tableModel.addColumn("Articulo");
        tableModel.addColumn("Cantidad");
        tableModel.addColumn("Total");


        paymentsTable.setModel(tableModel);

    }

    public void setCustomerModel(PaymentsModel model) {
        this.model = model;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        salesLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        paymentsTable = new common.CustomTable();
        paymentTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        totalLabel = new javax.swing.JLabel();
        totalTextField = new javax.swing.JTextField();
        pendingPaymentLabel = new javax.swing.JLabel();
        pendingPaymentTextField = new javax.swing.JTextField();
        payButton = new javax.swing.JButton();
        noticeLabel = new javax.swing.JLabel();
        imprTicket = new javax.swing.JCheckBox();

        salesLabel.setFont(new java.awt.Font("Arial Unicode MS", 1, 10));

        paymentsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        paymentsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                paymentsTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(paymentsTable);

        paymentTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                paymentTextFieldMouseEntered(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial Unicode MS", 1, 14)); // NOI18N
        jLabel1.setText("$ Abono:");

        totalLabel.setFont(new java.awt.Font("Arial Unicode MS", 1, 14));
        totalLabel.setText("Total:");

        totalTextField.setBackground(new java.awt.Color(102, 102, 102));
        totalTextField.setFont(new java.awt.Font("Arial Unicode MS", 1, 14));
        totalTextField.setForeground(new java.awt.Color(51, 255, 0));
        totalTextField.setCaretColor(new java.awt.Color(153, 153, 153));
        totalTextField.setDisabledTextColor(new java.awt.Color(0, 255, 0));
        totalTextField.setEnabled(false);

        pendingPaymentLabel.setFont(new java.awt.Font("Arial Unicode MS", 1, 14));
        pendingPaymentLabel.setText("Saldo Pendiente:");

        pendingPaymentTextField.setBackground(new java.awt.Color(102, 102, 102));
        pendingPaymentTextField.setFont(new java.awt.Font("Arial Unicode MS", 1, 14));
        pendingPaymentTextField.setForeground(new java.awt.Color(51, 255, 0));
        pendingPaymentTextField.setDisabledTextColor(new java.awt.Color(0, 255, 0));
        pendingPaymentTextField.setEnabled(false);

        payButton.setFont(new java.awt.Font("Arial Unicode MS", 1, 14)); // NOI18N
        payButton.setText("ABONAR");
        payButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payButtonActionPerformed(evt);
            }
        });

        noticeLabel.setFont(new java.awt.Font("Arial Unicode MS", 1, 10));
        noticeLabel.setForeground(new java.awt.Color(255, 0, 0));
        noticeLabel.setText("Este cliente no tiene saldo pendiente");

        imprTicket.setFont(new java.awt.Font("Arial Unicode MS", 1, 14)); // NOI18N
        imprTicket.setSelected(true);
        imprTicket.setText("Imprimir Ticket");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 512, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(paymentTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(imprTicket))
                        .addGap(116, 116, 116)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(82, 82, 82)
                                .addComponent(totalLabel))
                            .addComponent(pendingPaymentLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(pendingPaymentTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE)
                            .addComponent(totalTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(202, 202, 202)
                        .addComponent(payButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(noticeLabel)
                        .addGap(34, 34, 34)
                        .addComponent(salesLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 255, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(noticeLabel)
                    .addComponent(salesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(totalTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(totalLabel)))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(pendingPaymentTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(pendingPaymentLabel)
                                .addComponent(imprTicket))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(paymentTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(payButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void payButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payButtonActionPerformed
        try {
            //Valida que el abono introducido sea numerico.
            validateInput();

            if (JOptionPane.showConfirmDialog(this.getParent(), "¿Está seguro de que desea registrar el abono?") == 0) {
                //Actualiza el estatus de la venta y hace los ajustes a los abonos.
                Double abono = new Double(model.getCurrentPayment());
                model.updateSales();
                JOptionPane.showMessageDialog(this.getParent(), "El abono se ha registrado satisfactoriamente");

                Ticket ticket = new Ticket();

                LeerDatos leer = new LeerDatos();
                leer.leeDatos();


                for (int i = 0; i < leer.getHeader().size(); i++) {
                    ticket.agregaLinea((String) leer.getHeader().get(i));
                }

                Customer c = model.getSelectedCustomer();
                ticket.agregaLineaGeneral("Cliente: " + c.getName() + " " + c.getl_Name());

                ticket.agregaLineaGeneral("Fecha: " + new SimpleDateFormat("dd-MMMM-yy").format(Calendar.getInstance().getTime()));

                String[] datos = new String[4];
                datos[0] = "Venta";
                datos[1] = " ";
                datos[2] = "Desc";
                datos[3] = "Precio";
                ticket.agregaAbono(datos);

                Double total = new Double(0);
                Double saldoPendiente = new Double(0);


                for (int i = 0; i < model.getSales().size(); i++) {
                    Sale temp = model.getSales().get(i);

                    datos[0] = temp.getIdSale();
                    datos[1] = Integer.toString(temp.getAmount());
                    datos[2] = temp.getDescription();
                    datos[3] = Double.toString(temp.getTotalSale());

                    ticket.agregaAbono(datos);

                    total += temp.getTotalSale();
                    saldoPendiente += temp.getPendingPayment();
                }

                ticket.agregaLinea("");
                String[] datos2 = new String[3];
                datos2[0] = " ";
                datos2[1] = "Total: ";
                datos2[2] = total.toString();
                ticket.agregaDinero(datos2);
                datos2[1] = "Abono: ";
                datos2[2] = abono.toString();
                ticket.agregaDinero(datos2);
                datos2[1] = "Saldo P.: ";
                datos2[2] = saldoPendiente.toString();
                ticket.agregaDinero(datos2);


                for (int i = 0; i < leer.getFooter().size(); i++) {
                    ticket.agregaLinea((String) leer.getFooter().get(i));
                }


                if (imprTicket.isSelected()) {
                    ImpresoraTicket impresora = new ImpresoraTicket(ticket);
                    impresora.imprimir();
                }


                updatePaymentsPanel();
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }//GEN-LAST:event_payButtonActionPerformed

    private void paymentTextFieldMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_paymentTextFieldMouseEntered
        this.paymentTextField.setForeground(Color.BLACK);
    }//GEN-LAST:event_paymentTextFieldMouseEntered

    private void paymentsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_paymentsTableMouseClicked
    }//GEN-LAST:event_paymentsTableMouseClicked

    private void validateInput() throws ValidationException {


        if (InputValidator.validateIntNumber(paymentTextField)) {
            throw new ValidationException("Es necesario introducir una cantidad para abonar");
        }

        model.setCurrentPayment(Integer.parseInt(paymentTextField.getText()));

        if (model.getCurrentPayment() > model.getPendingPayments()) {
            throw new ValidationException("El abono no puede ser mayor al saldo pendiente");
        }

    }

    public void updatePaymentsPanel() {
        try {

            paymentTextField.setEnabled(true);
            model.setSelectedCustomer(model.getSelectedCustomer());

            SalesInfoDAO.getSalesModel(model, model.getSelectedCustomer().getid_C());


            if (model.getSales().isEmpty()) {
                this.noticeLabel.setVisible(true);
                salesLabel.setVisible(false);
            } else {
                this.noticeLabel.setVisible(false);
                salesLabel.setVisible(true);
                salesLabel.setText("Estas son las ventas de " + model.getSelectedCustomer().getName() + " "
                        + model.getSelectedCustomer().getl_Name());
            }


            //Actualiza el panel con las ventas abiertas asociadas con un usuario
            //El modelo contiene el total de las ventas
            this.paymentsTable.setModel(model.getSalesTableModel());
            this.totalTextField.setText(model.getTotalPrice());
            model.setPendingPayments(SalesInfoDAO.getTotalPendings(model.getSelectedCustomer().getid_C()));
            this.pendingPaymentTextField.setText(Double.toString(model.getPendingPayments()));

            //Borra el abono introducido
            paymentTextField.setText("");


        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox imprTicket;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel noticeLabel;
    private javax.swing.JButton payButton;
    private javax.swing.JTextField paymentTextField;
    private common.CustomTable paymentsTable;
    private javax.swing.JLabel pendingPaymentLabel;
    private javax.swing.JTextField pendingPaymentTextField;
    private javax.swing.JLabel salesLabel;
    private javax.swing.JLabel totalLabel;
    private javax.swing.JTextField totalTextField;
    // End of variables declaration//GEN-END:variables
}
