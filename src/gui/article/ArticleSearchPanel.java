/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ArticleSearchPanel.java
 *
 * Created on 17/07/2010, 06:37:42 PM
 */

package gui.article;

import bussiness.Article;
import common.MainPanelInterface;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.Map;
import javax.swing.ListModel;

/**
 *
 * @author RVAFOD
 */
public class ArticleSearchPanel extends javax.swing.JPanel {

    /** Creates new form ArticleSearchPanel */

    ArrayList<Article> articleList = new ArrayList<Article>();

    public ArticleSearchPanel() {
        initComponents();
    }



    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        descriptionLabel = new javax.swing.JLabel();
        descriptionTextfield = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        itemList = new javax.swing.JList();

        descriptionLabel.setFont(new java.awt.Font("Arial Unicode MS", 1, 14)); // NOI18N
        descriptionLabel.setText("Descripci√≥n:");

        descriptionTextfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                descriptionTextfieldActionPerformed(evt);
            }
        });
        descriptionTextfield.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                descriptionTextfieldFocusGained(evt);
            }
        });
        descriptionTextfield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                descriptionTextfieldKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                descriptionTextfieldKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                descriptionTextfieldKeyTyped(evt);
            }
        });

        itemList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        itemList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                itemListMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(itemList);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(descriptionLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(descriptionTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(descriptionLabel)
                    .addComponent(descriptionTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void descriptionTextfieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_descriptionTextfieldKeyReleased

            String l_name = descriptionTextfield.getText().toUpperCase();
            descriptionTextfield.setText(l_name);
            setListModel();
             
    }//GEN-LAST:event_descriptionTextfieldKeyReleased

     public void cleanItemList(){

        itemList.removeAll();
    }

    private void itemListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itemListMouseClicked

        Article art = (Article) articleList.get(itemList.getSelectedIndex());
        ((MainPanelInterface)this.getParent()).updateMainComponent(art);

    }//GEN-LAST:event_itemListMouseClicked

    private void descriptionTextfieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_descriptionTextfieldKeyPressed
       
    }//GEN-LAST:event_descriptionTextfieldKeyPressed

    private void descriptionTextfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_descriptionTextfieldActionPerformed
     
    }//GEN-LAST:event_descriptionTextfieldActionPerformed

    private void descriptionTextfieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_descriptionTextfieldKeyTyped
      
    }//GEN-LAST:event_descriptionTextfieldKeyTyped

    private void descriptionTextfieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_descriptionTextfieldFocusGained
     
    }//GEN-LAST:event_descriptionTextfieldFocusGained


    private void setListModel(){

        String desc = descriptionTextfield.getText();
        articleList = new ArrayList();
        Iterator it = MainArticlePanel.getArticleList().entrySet().iterator();

        while (it.hasNext()) {
            Map.Entry e = (Map.Entry) it.next();
            String key = (String) e.getKey();
            Article value = (Article) e.getValue();

            if (value.getDescripcion().contains(desc)) {
                articleList.add(value);
            }
        }

        final ArrayList list  = new ArrayList();

        for(int i = 0; i < articleList.size(); i++){
            list.add(articleList.get(i).getDescripcion());
        }

            ListModel model = new javax.swing.AbstractListModel() {
            Object[] items = list.toArray();
            public int getSize() { return items.length; }
            public Object getElementAt(int i) { return items[i]; }
        };

        itemList.setModel(model);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel descriptionLabel;
    private javax.swing.JTextField descriptionTextfield;
    private javax.swing.JList itemList;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables

}
