/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MainUsersPanel.java
 *
 * Created on 26/07/2010, 03:33:31 PM
 */
package gui.users;

import bussiness.Article;
import bussiness.Customer;
import bussiness.User;
import common.Constants;
import common.InputValidator;
import common.MainPanelInterface;
import common.ValidationException;
import dao.UsersDAO;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import model.UsersModel;

/**
 *
 * @author Luc3
 */
public class MainUsersPanel extends javax.swing.JPanel implements MainPanelInterface {

    /** Creates new form MainUsersPanel */
    UsersModel model = new UsersModel();
    ArrayList<User> users;
    User us;
     private final String[] profileType = {"Administrador", "Cobrador"};

    public MainUsersPanel() {
        initComponents();
        searchUsersPanel1.setUsersModel(model);
        visibleComponents(false);
        searchUsersPanel1.setVisible(false);
        this.saveButton.setVisible(false);
 
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")

    public User getUsersInfo() {

        String name = nameText.getText();
        String user = userText.getText();
        String password = passwordText.getText();
        String profileTypeText = (String) itemprofileType.getSelectedItem();

        if (model.getSelectedUser() == null) {
            return new User(user, password, name, profileTypeText);
        } else {
            return new User(model.getSelectedUser().getIdUser(), user, password, name, profileTypeText);
        }
    }

    public void updateUsersModel() {

        try {
            UsersDAO.getUsersModel(model);
        } catch (SQLException ex) {
            Logger.getLogger(MainUsersPanel.class.getName()).log(Level.SEVERE, null, ex);
        }

        searchUsersPanel1.setModel(model.getUsersTableModel());
    }

    public void successfulMessage(String message) {

        JOptionPane.showMessageDialog(this.getParent(), message);
    }

    public void setTextField() {
        nameText.setText("");
        passwordText.setText("");
        userText.setText("");
        RpasswordText.setText("");

    }

    public void enabledTextField(boolean b) {

        nameText.setEnabled(b);
        passwordText.setEnabled(b);
        userText.setEnabled(b);
        RpasswordText.setEnabled(b);
       
    }

    public void alertMessage() {
        JOptionPane.showMessageDialog(this, "No se ha seleccionado ningun usuario");
    }



    public void setAddComponents() {
       
        visibleComponents(true);
        enabledTextField(true);
        passwordLabel.setText("Contraseña: ");
        passwordRepeatLabel.setText("Repetir Contraseña: ");
        this.saveButton.setVisible(true);
        this.saveButton.setText("AGREGAR");
        this.searchUsersPanel1.setVisible(false);

    }

    public void setEditComponents() {
       
        enabledTextField(true);
        visibleComponents(true);
        passwordLabel.setText("Nueva Contraseña: ");
        passwordRepeatLabel.setText("Contraseña Anterior:");
        this.saveButton.setVisible(true);
        this.saveButton.setText("EDITAR");
        updateUsersModel();
        searchUsersPanel1.setVisible(true);
      
    }

    public void setDeleteComponents() {

        
        enabledTextField(false);
        visibleComponents(true);
        passwordLabel.setVisible(false);
        passwordRepeatLabel.setVisible(false);
        passwordText.setVisible(false);
        RpasswordText.setVisible(false);
        itemprofileType.setVisible(false);
        profileTypeLabel.setVisible(false);
        this.saveButton.setVisible(true);
        this.saveButton.setText("ELIMINAR");
        updateUsersModel();
        searchUsersPanel1.setVisible(true);

    }

    public void visibleComponents(boolean c) {

        nameLabel.setVisible(c);
        userLabel.setVisible(c);
        passwordLabel.setVisible(c);
        passwordRepeatLabel.setVisible(c);
        profileTypeLabel.setVisible(c);
        nameText.setVisible(c);
        userText.setVisible(c);
        passwordText.setVisible(c);
        RpasswordText.setVisible(c);
        itemprofileType.setVisible(c);

    }

    public void setUserData(User us) {

        nameText.setText(us.getName());
        passwordText.setText("");
        userText.setText(us.getUser());
        RpasswordText.setText("");
        if(model.getSelectedUser().getProfileType().equals("Administrador")){
             itemprofileType.setSelectedItem("Administrador");
        }else{
             itemprofileType.setSelectedItem("Cobrador");
        }
       


    }

    public void validatePassword() throws ValidationException {

        if (!(InputValidator.validatePassword(passwordText, RpasswordText))) {

            throw new ValidationException(InputValidator.PASSWORD_ERROR);
        }
    }

    public void validateInput() throws ValidationException {

        boolean isValidname = InputValidator.validateText2(nameText);
        boolean isValiduser = InputValidator.validateText2(userText);
        boolean isValidpassword = InputValidator.validateText2(passwordText);
        boolean isValidrepeat = InputValidator.validateText2(RpasswordText);

        if (isValidname || isValiduser || isValidpassword || isValidrepeat) {

            throw new ValidationException(InputValidator.GENERAL_ERROR);
        }
    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator1 = new javax.swing.JSeparator();
        addUser = new javax.swing.JButton();
        editUser = new javax.swing.JButton();
        deleteUser = new javax.swing.JButton();
        nameText = new javax.swing.JTextField();
        nameLabel = new javax.swing.JLabel();
        userLabel = new javax.swing.JLabel();
        saveButton = new javax.swing.JButton();
        passwordRepeatLabel = new javax.swing.JLabel();
        passwordLabel = new javax.swing.JLabel();
        passwordText = new javax.swing.JPasswordField();
        itemprofileType = new javax.swing.JComboBox();
        profileTypeLabel = new javax.swing.JLabel();
        RpasswordText = new javax.swing.JPasswordField();
        userText = new javax.swing.JTextField();
        searchUsersPanel1 = new gui.users.SelectUsersPanel();

        setPreferredSize(new java.awt.Dimension(554, 541));
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        addUser.setFont(new java.awt.Font("Arial Unicode MS", 1, 14));
        addUser.setText("AGREGAR");
        addUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addUserActionPerformed(evt);
            }
        });

        editUser.setFont(new java.awt.Font("Arial Unicode MS", 1, 14));
        editUser.setText("EDITAR");
        editUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editUserActionPerformed(evt);
            }
        });

        deleteUser.setFont(new java.awt.Font("Arial Unicode MS", 1, 14));
        deleteUser.setText("ELIMINAR");
        deleteUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteUserActionPerformed(evt);
            }
        });

        nameLabel.setFont(new java.awt.Font("Tahoma", 1, 14));
        nameLabel.setText("Nombre:");

        userLabel.setFont(new java.awt.Font("Tahoma", 1, 14));
        userLabel.setText("Usuario:");

        saveButton.setFont(new java.awt.Font("Tahoma", 1, 14));
        saveButton.setText("GUARDAR");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        passwordRepeatLabel.setFont(new java.awt.Font("Tahoma", 1, 14));
        passwordRepeatLabel.setText("Repetir Contraseña:");

        passwordLabel.setFont(new java.awt.Font("Tahoma", 1, 14));
        passwordLabel.setText("Contraseña:");

        itemprofileType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Administrador", "Cobrador" }));

        profileTypeLabel.setFont(new java.awt.Font("Tahoma", 1, 14));
        profileTypeLabel.setText("Tipo de Perfil:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 482, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(addUser, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(editUser, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE)
                        .addGap(16, 16, 16)
                        .addComponent(deleteUser, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
                        .addGap(11, 11, 11))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(searchUsersPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(55, 55, 55))
            .addGroup(layout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(profileTypeLabel)
                    .addComponent(passwordRepeatLabel)
                    .addComponent(passwordLabel)
                    .addComponent(userLabel)
                    .addComponent(nameLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(itemprofileType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(passwordText)
                    .addComponent(RpasswordText)
                    .addComponent(userText)
                    .addComponent(nameText, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(163, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(212, 212, 212)
                .addComponent(saveButton)
                .addContainerGap(239, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteUser)
                    .addComponent(editUser)
                    .addComponent(addUser))
                .addGap(30, 30, 30)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchUsersPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nameLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(userText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(userLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(passwordText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(passwordLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(RpasswordText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(passwordRepeatLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(itemprofileType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(profileTypeLabel))
                .addGap(52, 52, 52)
                .addComponent(saveButton)
                .addContainerGap(88, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addUserActionPerformed

        
        setTextField();
        model.setAction("ADD");
        setAddComponents();
        

    }//GEN-LAST:event_addUserActionPerformed

    private void editUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editUserActionPerformed

        setTextField();
        model.setAction("EDIT");
        setEditComponents();
        
   
    }//GEN-LAST:event_editUserActionPerformed

    private void deleteUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteUserActionPerformed

        setTextField();
        model.setAction("DELETE");
           setDeleteComponents();
           

       
    }//GEN-LAST:event_deleteUserActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed

        try {

            User userInfo = getUsersInfo();
            if (model.getAction().equals("ADD")) {
                validateInput();
                validatePassword();
                if (Constants.confirmDialog(this.getParent(), "¿Está seguro de que desea agregar al usuario " + userInfo.getUser())) {
                    UsersDAO.insertUsersInfo(userInfo);
                    String message = userInfo.getName() + " " + userInfo.getUser() + " ha sido agregado existosamente";
                    successfulMessage(message);
                }

            } else if (model.getAction().equals("EDIT")) {
                validateInput();
                if (Constants.confirmDialog(this.getParent(), "¿Está seguro de que desea editar al usuario " + userInfo.getUser())) {
                    UsersDAO.updateUsers(userInfo);
                    String message = "El usuario " + userInfo.getUser() + " ha sido editado existosamente";
                    successfulMessage(message);
                }


                model.setSelectedUser(null);
            } else if (model.getAction().equals("DELETE")) {
                
                if (Constants.confirmDialog(this.getParent(), "¿Estas seguro de que desea eliminar al usuario " + userInfo.getUser())) {
                    UsersDAO.deleteUsers(userInfo);
             
                    String message = "El usuario " + userInfo.getUser() + " ha sido eliminado existosamente";
                    successfulMessage(message);
                }

                model.setSelectedUser(null);
            }


            updateUsersModel();
            setTextField();



        } catch (SQLException ex) {
            Logger.getLogger(MainUsersPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ValidationException ex) {
            Logger.getLogger(MainUsersPanel.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this.getParent(), ex.getMessage());
        }
}//GEN-LAST:event_saveButtonActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown

    }//GEN-LAST:event_formComponentShown

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPasswordField RpasswordText;
    private javax.swing.JButton addUser;
    private javax.swing.JButton deleteUser;
    private javax.swing.JButton editUser;
    private javax.swing.JComboBox itemprofileType;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JTextField nameText;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JLabel passwordRepeatLabel;
    private javax.swing.JPasswordField passwordText;
    private javax.swing.JLabel profileTypeLabel;
    private javax.swing.JButton saveButton;
    private gui.users.SelectUsersPanel searchUsersPanel1;
    private javax.swing.JLabel userLabel;
    private javax.swing.JTextField userText;
    // End of variables declaration//GEN-END:variables

   

    public void updateMainComponent() {
      
        setUserData(model.getSelectedUser());
       
    }

    public void reset() {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void updateMainComponent(Customer c) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void updateMainComponent(Article c) {
        throw new UnsupportedOperationException("Not supported yet.");
    }
}
